Apriori:  Bottom up algorithm based on support and confidence.  Starts with single attributes and looks for only those meeting the minimum support level.  Continues adding attributes to eachother until no itemsets can be made that meet the minimum support.  From these final itemsets, rules are generated that can meet the minimum confidence level.

=== Run information ===

Scheme:       weka.associations.Apriori -I -N 5 -T 0 -C 0.9 -D 0.05 -U 1.0 -M 0.1 -S -1.0 -c -1
Relation:     weather.symbolic
Instances:    14
Attributes:   5
              outlook
              temperature
              humidity
              windy
              play
=== Associator model (full training set) ===


Apriori
=======

Minimum support: 0.25 (3 instances)
Minimum metric <confidence>: 0.9
Number of cycles performed: 15

Generated sets of large itemsets:

Size of set of large itemsets L(1): 12

Large Itemsets L(1):
outlook=sunny 5
outlook=overcast 4
outlook=rainy 5
temperature=hot 4
temperature=mild 6
temperature=cool 4
humidity=high 7
humidity=normal 7
windy=TRUE 6
windy=FALSE 8
play=yes 9
play=no 5

Size of set of large itemsets L(2): 26

Large Itemsets L(2):
outlook=sunny humidity=high 3
outlook=sunny windy=FALSE 3
outlook=sunny play=no 3
outlook=overcast play=yes 4
outlook=rainy temperature=mild 3
outlook=rainy humidity=normal 3
outlook=rainy windy=FALSE 3
outlook=rainy play=yes 3
temperature=hot humidity=high 3
temperature=hot windy=FALSE 3
temperature=mild humidity=high 4
temperature=mild windy=TRUE 3
temperature=mild windy=FALSE 3
temperature=mild play=yes 4
temperature=cool humidity=normal 4
temperature=cool play=yes 3
humidity=high windy=TRUE 3
humidity=high windy=FALSE 4
humidity=high play=yes 3
humidity=high play=no 4
humidity=normal windy=TRUE 3
humidity=normal windy=FALSE 4
humidity=normal play=yes 6
windy=TRUE play=yes 3
windy=TRUE play=no 3
windy=FALSE play=yes 6

Size of set of large itemsets L(3): 4

Large Itemsets L(3):
outlook=sunny humidity=high play=no 3
outlook=rainy windy=FALSE play=yes 3
temperature=cool humidity=normal play=yes 3
humidity=normal windy=FALSE play=yes 4

Best rules found:

1. outlook=overcast 4 ==> play=yes 4    conf:(1)
2. temperature=cool 4 ==> humidity=normal 4    conf:(1)
3. humidity=normal windy=FALSE 4 ==> play=yes 4    conf:(1)
4. outlook=sunny play=no 3 ==> humidity=high 3    conf:(1)
5. outlook=sunny humidity=high 3 ==> play=no 3    conf:(1)

Itemsets generated were only 3 attributes in size as adding other attributes made the support go under the minimum 3. These itemsets resulted in the the top 5 rules above.

PredictiveApriori:  This seems to be a more exhaustive Apriori algorithm as you just specify the amount of rules you want made.  The algorithm at this point does not care about minimums to make pruning decisions.  Instead it generates as much data as is needed to create the top n rules based on accuracy.

=== Run information ===

Scheme:       weka.associations.PredictiveApriori -N 10 -c -1
Relation:     weather.symbolic
Instances:    14
Attributes:   5
              outlook
              temperature
              humidity
              windy
              play
=== Associator model (full training set) ===


PredictiveApriori
===================


Best rules found:

 1. outlook=overcast 4 ==> play=yes 4    acc:(0.95323)
 2. temperature=cool 4 ==> humidity=normal 4    acc:(0.95323)
 3. humidity=normal windy=FALSE 4 ==> play=yes 4    acc:(0.95323)
 4. humidity=normal 7 ==> play=yes 6    acc:(0.69497)
 5. play=no 5 ==> humidity=high 4    acc:(0.59096)
 6. windy=FALSE 8 ==> play=yes 6    acc:(0.56435)
 7. temperature=hot 4 ==> humidity=high 3    acc:(0.54473)
 8. temperature=hot 4 ==> windy=FALSE 3    acc:(0.54473)
 9. temperature=cool 4 ==> play=yes 3    acc:(0.54473)
10. humidity=normal play=yes 6 ==> windy=FALSE 4    acc:(0.51949)

This seems to generate the same top 3 rules, but rules 4 and 5 differ from the regular Apriori algorithm.  I'm not entirely sure why 4 and 5 are different, but I would assume it has something to do with the itemsets that the rules were based off of.

Tertius:  Performs a top-down A* search over all possible rules.  Looks for only the rules that maximize accuracy compared to noise.

=== Run information ===

Scheme:       weka.associations.Tertius -K 10 -F 0.0 -N 1.0 -L 4 -G 0 -c 0 -I 0 -P 0
Relation:     weather.symbolic
Instances:    14
Attributes:   5
              outlook
              temperature
              humidity
              windy
              play
=== Associator model (full training set) ===


Tertius
=======

 1. /* 0.633754 0.071429 */ play = yes ==> humidity = normal or outlook = overcast
 2. /* 0.607625 0.000000 */ humidity = normal ==> temperature = cool or play = yes
 3. /* 0.607625 0.000000 */ temperature = cool ==> humidity = normal
 4. /* 0.594071 0.214286 */ humidity = normal ==> temperature = cool
 5. /* 0.590214 0.000000 */ humidity = high and outlook = sunny ==> play = no
 6. /* 0.555556 0.000000 */ play = no ==> windy = TRUE or outlook = sunny
 7. /* 0.486606 0.000000 */ play = no and outlook = sunny ==> humidity = high
 8. /* 0.486606 0.000000 */ humidity = normal ==> play = yes or outlook = rainy
 9. /* 0.469374 0.000000 */ outlook = overcast ==> play = yes
10. /* 0.469374 0.000000 */ windy = FALSE and outlook = overcast ==> temperature = hot
11. /* 0.469374 0.000000 */ outlook = overcast ==> temperature = hot or windy = TRUE
12. /* 0.469374 0.000000 */ temperature = hot and play = yes ==> outlook = overcast
13. /* 0.469374 0.000000 */ play = no ==> humidity = high or windy = TRUE
14. /* 0.469374 0.000000 */ temperature = hot ==> play = no or outlook = overcast
15. /* 0.469374 0.000000 */ temperature = hot ==> humidity = high or outlook = overcast
16. /* 0.469374 0.000000 */ humidity = high and play = no ==> temperature = mild or outlook = sunny
17. /* 0.469374 0.000000 */ temperature = mild and play = yes ==> windy = TRUE or outlook = rainy
18. /* 0.469374 0.000000 */ outlook = sunny ==> temperature = cool or windy = TRUE or play = no
19. /* 0.467119 0.357143 */ play = yes ==> outlook = overcast
20. /* 0.458333 0.071429 */ play = yes ==> windy = FALSE or outlook = overcast
21. /* 0.458333 0.071429 */ humidity = high and play = no ==> outlook = sunny
22. /* 0.439100 0.071429 */ play = no ==> humidity = high
23. /* 0.439100 0.071429 */ humidity = high ==> temperature = mild or play = no
24. /* 0.439100 0.071429 */ humidity = high ==> temperature = mild or outlook = sunny

Number of hypotheses considered: 1724
Number of hypotheses explored: 689

The top rules generated by this algorithm do not seem as useful as outcomes are in the form x = a or y = b.  The 'or' seems to make the rules too broad to me.  Of course the accuracy is going to be high if you allow both outcomes.

HotSpot: Learns a set of rules focused on maximizing the a target value.  Seems to generate rules based on records where the target value exists.

=== Run information ===

Scheme:       weka.associations.HotSpot -c last -V first -S 0.33 -M 2 -I 0.01
Relation:     weather
Instances:    14
Attributes:   5
              outlook
              temperature
              humidity
              windy
              play
=== Associator model (full training set) ===


Hot Spot
========
Total population: 14 instances
Target attribute: play
Target value: yes [value count in total population: 9 instances (64.29%)]
Minimum value count for segments: 5 instances (33% of total population)
Maximum branching factor: 2
Minimum improvement in target: 1%

play=yes (64.29% [9/14])
  humidity <= 80 (85.71% [6/7])
  |   temperature > 65 (100% [5/5])
  windy = FALSE (75% [6/8])
  |   temperature <= 83 (85.71% [6/7])
  |   |   humidity <= 86 (100% [5/5])
  |   humidity <= 86 (83.33% [5/6])

Rules seem to be generated based on confidence and support with respect to the target value.


